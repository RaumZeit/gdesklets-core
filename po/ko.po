# Korean translation for the gDesklets
# Copyright (C) 2003 Free Software Foundation, Inc.
# This file is distributed under the same license as the gDesklets package.
# DongCheon Park <dcpark@kaist.ac.kr>, 2003
#
msgid ""
msgstr ""
"Project-Id-Version: gDesklets 0.22.1\n"
"POT-Creation-Date: 2003-09-11 11:45+0200\n"
"PO-Revision-Date: 2003-09-30 21:28+0900\n"
"Last-Translator: DongCheon Park <dcpark@kaist.ac.kr>\n"
"Language-Team: Korean <ko@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: data/gdesklets.desktop.in.h:1
msgid "A desktop applet system for GNOME"
msgstr "GNOME용 데스크탑 애플릿"

#: data/gdesklets.keys.in.h:1
msgid "gDesklets display file"
msgstr "gDesklets 디스플레이 파일"

#.
#. Factory class for dynamically loaded Sensors.
#.
#. a set to remember the modules loaded so far
#.
#. Creates and returns a Sensor of the given type or None if the Sensor
#. could not be created.
#.
#. FIXME: I think the GConf key main/sensorpaths is obsolete now.
#. Do we still need to read it?
#. reload old modules to force using the latest version; this
#. means we can edit modules while running gDesklets
#. a stack trace could be useful for debugging sensors
#. a stack trace could be useful for debugging sensors
#. end for
#: factory/SensorFactory.py:83
#, python-format
msgid "Could not load sensor '%(name)s'"
msgstr "'%(name)s' 센서를 읽어 들일 수 없습니다."

#: factory/SensorFactory.py:84
msgid ""
"An error occurred while loading a sensor. This most likely means that the "
"sensor is broken or simply not installed."
msgstr ""
"센서를 읽어 들이는 도중 오류가 발생했습니다. 대부분 "
"센서가 깨졌거나 설치되지 않은 경우입니다."

#.
#. Class for creating Displays from XML data.
#.
#.
#. Parses the given XML data and returns a new Display object.
#.
#. parse display data
#. add the sensors
#. add the DefaultSensor
#. we don't wanna override watch settings from the .display
#. add the children and configure
#. make the corrupt display visible so that the user can
#. remove it
#: factory/DisplayFactory.py:91
msgid "Error while configuring display"
msgstr "디스플레이를 설정하는 도중 오류 발생"

#: factory/DisplayFactory.py:92
msgid ""
"A display could not be configured properly. It will most likely be broken "
"and you should consider removing it."
msgstr ""
"디스플레이를 제대로 설정할 수 없습니다. 대부분의 경우 깨진 것이므로 "
"제거할 것을 고려하시기 바랍니다."

#. end try
#.
#. Creates a TargetSettings object from the given Attributes object.
#.
#. if (key in ["uri", "bg-uri"]):
#. value = os.path.abspath(value)
#. end for
#. if there is no ID given, guess a unique one
#. remember everything for later
#. nesting errors in XML are detected by the SAX parser; if we get
#. here, it means our parser is buggy, not the XML input
#. the set of open displays
#. make sure we have a valid configuration
#. welcome new users
#.
#. Welcomes new users and sets up the configuration base.
#.
#: main/Starter.py:40
#, python-format
msgid "Welcome to %(name)s<i>!</i>"
msgstr "%(name)s<i>에 오신 것을 환영합니다!</i>"

#: main/Starter.py:41
#, python-format
msgid ""
"It looks like you are running %(name)s for the first time.\n"
"\n"
"You can add new displays by launching them in your file manager.\n"
"\n"
"<b>Have fun,</b>\n"
"  <i>the %(name)s developers</i>"
msgstr ""
"%(name)s을 처음으로 실행하는 것 같습니다.\n"
"\n"
"새 디스플레이를 파일 관리자로 열어서 추가할 수 있습니다.\n"
"\n"
"<b>즐거운 시간 되시길...</b>\n"
"  <i>%(name)s 개발자</i>"

#.
#. Reacts on observer messages from the display.
#.
#. end if
#.
#. Reacts on changes in the list of displays.
#.
#.
#. Updates display set. Added displays that are not running will be started.
#.
#. end if
#. end for
#.
#. Creates and returns a new display from the given data, or None in case
#. of an error.
#.
#: main/Starter.py:113
#, python-format
msgid "Could not open display file '%(path)s'"
msgstr "'%(path)s' 디스플레이 파일을 열 수 없습니다."

#: main/Starter.py:115
msgid "The display file could not be opened because the file was not readable."
msgstr "파일이 발견되지 않았으므로 디스플레이 파일을 열 수 없습니다."

#. os.chdir(oldcwd)
#: main/Starter.py:131
#, python-format
msgid "Invalid display file '%(path)s'"
msgstr "'%(path)s' 디스플레이 파일은 유효하지 않습니다."

#: main/Starter.py:132
msgid "The display file contains invalid data and could not be loaded."
msgstr "디스플레이 파일이 유효하지 않은 데이터를 포함하고 있으므로 읽어 들일 수 없습니다."

#.
#. Removes the given display.
#.
#. remove closed display from the list of displays
#. end for
#.
#. Restarts the given display.
#.
#.
#. Starts up all displays.
#.
#.
#. Abstract class for all Sensors. Every Sensor has to inherit from this class.
#.
#. the path of this sensor
#. configuration manager for sensor properties
#. flag for stopping the sensor
#. converter for data types
#.
#. Returns the path of this sensor.
#.
#.
#. Returns a new empty TargetSettings object.
#.
#.
#. Sends the given TargetSettings object to the Display.
#.
#.
#. Adds a timeout function with the given interval in ms.
#. The callback function must return TRUE in order to be called again.
#.
#.
#. Adds and runs a new thread.
#.
#. the thread should not start before setup is complete, therefore
#. we are using the GTK idle handler
#.
#. Stops this sensor.
#.
#. clear GConf
#.
#. Returns whether this sensor is stopped. Use this method to check if your
#. threads have to terminate.
#.
#.
#. Returns the unique config ID of this sensor.
#.
#.
#. Sets the data types to be used for the configuration values.
#.
#.
#. Creates and returns an empty new sensor configurator.
#.
#.
#. Returns the configurator of this sensor.
#.
#.
#. Opens the given menu.
#.
#: sensor/Sensor.py:199
msgid "_Configure display"
msgstr "디스플레이 설정(_C)"

#: sensor/Sensor.py:200
msgid "Re_start display"
msgstr "디스플레이 재시작(_S)"

#: sensor/Sensor.py:201
msgid "_Remove display"
msgstr "디스플레이 제거(_R)"

#: sensor/Sensor.py:203
msgid "_About"
msgstr "gDesklets에 대하여(_A)"

#: sensor/Sensor.py:205
msgid "_Quit"
msgstr "끝내기(_Q)"

#: sensor/Sensor.py:237
msgid "translator_credits"
msgstr ""
"DongCheon Park (동쪽하늘)\n"
"   <dcpark@kaist.ac.kr>"

