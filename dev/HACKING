* don't use 
	if dictionary.has_key(key)
  better use
	if key in dictionnary



* don't use 
	def f(args = [])
  better use
	def f(*args)

  my_args = (1, 2, 3)
  f( *my_args)

  is equivalent to

  f(1, 2, 3)



* do not use apply



* python doesn't need ()
  but it's good for readability of the code, so use it, e.g.
	if (condition):
		<statement>

	while (condition):
		<statement>

	return (value)



* read python documentation
  http://python.org/doc/current/lib/lib.html



* avoid import *



* avoid import statement in __init__.py



* use the for..else idiom (same for the while..else)

	for i in range(10):
		<statementA>
	else:
		<statementB>

  statementB will be executed if the for loop is done til the end
  (no break statement)
  
  
* never use dummy variables for tuple unpacking. Better use slicing.


	flags, mtu, subnet, address, pack_in, pack_out, pack_total, \
        bytes_in, bytes_out, bytes_total, err_in, err_out, err_total, \
        collisions = glibtop.get_netload(dev)
        
        breaks (yes it does) when get_netload() since get_netload() now return a
        longer tuple. Only grab the tuple values you need.


